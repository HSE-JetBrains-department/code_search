Эта часть - твоя, как и договаривались.

Как можно связать с другой частью? Один из вариантов при условии, что никто ничего не изменит

В консольном вводе можно писать
prepare index_name -p path/to/files/

где в files/ лежат json с данными. Как они будут храниться - я не знаю, но возможно
ElasticUI.json:
    {
        // _doc/1
    }
    {
        // _doc/2
    }
    {
        // _doc/3
    }
    ...

Затем все параметры аргументов разделяются на пары 
(0, index_name)
(-p, path/to/files/)
где индексация у параметов без -p несквозная (-p param не учитывается)

По .first в словаре можно найти название аргумента для request у отдельного метода - load_data например,
и сохранить туда .second

После этого метод надо вызвать с переданным request и response для возврата.
Как это делать - я пооставляла комменты в файлах run (запускаемого как main) и в файле src/views/init/view.py

В common.py можно повыносить общие методы.

Все аргументы для request можно описать в api
(сейчас мне не очень хочется писать формат, потому что он может тысячу лет как поменяться в моем восприятии или после ревью)

В response можно оставить поля errors, template - форматная строчка, в которую можно передать аргументы через
["template"].format(arg) - это сейчас я сделала скорее для показа на консоль.
Остальной вывод response - аргументы, которые в том числе можно подставить в template

Все остальное содержимое метода - под твоей юрисдикцией